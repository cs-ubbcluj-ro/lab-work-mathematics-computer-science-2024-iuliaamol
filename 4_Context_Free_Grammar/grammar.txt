# miniJS Grammar
# This file defines the context-free grammar (CFG) for the miniJS language.
# It is written using Backus-Naur Form (BNF) notation.

# Top-level rule: Program structure
<program> ::= "program" <identifier> <declist> <stmtlist> "end"

# Declarations
<declist> ::= <declaration> ";" <declist> | <declaration> ";"
<declaration> ::= "var" <identifier> ":" <type>
<type> ::= "int" | "bool"

# Statements
<stmtlist> ::= <stmt> ";" <stmtlist> | <stmt> ";"
<stmt> ::= <assignment> | <iostmt> | <ifstmt> | <whilestmt>

# Assignment statement
<assignment> ::= <identifier> ":=" <expression> ";"

# Input/Output statements
<iostmt> ::= "read" "(" <identifier> ")" ";" 
           | "write" "(" <expression> ")" ";"

# Conditional and loop statements
<ifstmt> ::= "IF" "(" <condition> ")" "begin" <stmtlist> "end"
<whilestmt> ::= "WHILE" "(" <condition> ")" "begin" <stmtlist> "end"

# Conditions
<condition> ::= <expression> <relational_op> <expression>
<relational_op> ::= "=" | "!=" | "<" | "<=" | ">" | ">="

# Expressions
<expression> ::= <term> | <expression> "+" <term> | <expression> "-" <term>
<term> ::= <factor> | <term> "*" <factor> | <term> "%" <factor>
<factor> ::= <identifier> | <number_const> | <bool_const> | "(" <expression> ")"

# User-defined functions
<function> ::= "function" <identifier> "(" <identifier> ")" "{" <stmtlist> "}"

# Identifiers and constants
<identifier> ::= <letter> {<letter> | <digit>}
<letter> ::= "a" | "b" | ... | "z"
<digit> ::= "0" | "1" | ... | "9"
<number_const> ::= <digit> {<digit>}
<bool_const> ::= "true" | "false"
