This document explains the context-free grammar (CFG) used to parse and define the miniJS language.
The grammar is presented in BNF,
where non-terminal symbols are in  "< >",
and terminal symbols (keywords and operators) are represented directly as text. 

#Top Level structure
The entry point of a miniJS program is the <program>.
A valid program begins with the keyword "program", 
followed by the programâ€™s identifier (name), a list of variable declarations (<declist>),
a list of statements (<stmtlist>), and finally, ends with the keyword "end".

#Declarations
Are specified in the <declist>.
Each declaration begins with the keyword "var", followed by an <identifier> (the variable name) and a type (<type>).
Types in miniJS can either be "int" (integer) or "bool" (boolean).

#Statements
The <stmtlist> represents a sequence of statements.
Each statement can be an assignment, an input/output statement (read/write), a conditional (if), or a loop (while).

#Expressions and Operators:
<expression> supports arithmetic with +, and <term> includes * and %.
Conditions use comparison operators like == and ===.
  
Identifiers and Constants:
<identifier> follows the rule: starts with a <letter> and is followed by any combination of letters and digits.
<int_const> represents non-negative integers.
<bool_const> includes "true" and "false".

Relations:
<relation> supports all comparison operators defined in the specification.

